// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum role {
  ADMIN
  USER
  SUPERADMIN
}

model User {
  id        Int       @id @default(autoincrement())
  firstName String
  lastName  String
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Product   Product[]
  role      role      @default(USER)
  isAdmin   Boolean   @default(false)
  Cart      Cart?
}

model Product {
  id           Int        @id @default(autoincrement())
  productName  String
  productPrice Decimal
  Desc         String
  shortDesc    String?
  stock        Int
  CreatedAt    DateTime   @default(now())
  UpdatedAt    DateTime   @updatedAt
  isDeleted    Boolean    @default(false)
  isPublish    Boolean    @default(false)
  userId       Int
  User         User       @relation(fields: [userId], references: [id])
  cateId       Int
  cat          category   @relation(fields: [cateId], references: [catId])
  cartItem     cartItem[]
}

model category {
  catId     Int      @id @default(autoincrement())
  catname   String  @unique
  catdesc   String
  catimage  String
  createAt  DateTime @default(now())
  updateAt  DateTime @updatedAt
  isDeleted Boolean  @default(false)

  Product Product[]
}

model Cart {
  id          String     @id @default(uuid())
  userId      Int        @unique
  User        User       @relation(fields: [userId], references: [id])
  cartItem    cartItem[]
  createdAt   DateTime   @default(now())
  lastUpdated DateTime   @updatedAt
}

// make cartItem
// one to many relation
// columns -> cartItemId, itemId, cartId

model cartItem {
  id          Int      @id @default(autoincrement())
  // cart relationship
  cartId      String
  Cart        Cart     @relation(fields: [cartId], references: [id], onDelete: Cascade)
  // product relatioship
  productId   Int
  product     Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  createdAt   DateTime @default(now())
  lastUpdated DateTime @updatedAt
}
